# From https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


defaults:
      run:
        working-directory: ./libs/lib/

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - id: setup_python
      name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - id: python_cache
      uses: actions/cache@v3
      with:
        path: venv
        key: ${{ runner.os }}-pip-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('setup.cfg') }}
    - if: steps.python_cache.outputs.cache-hit != 'true' && runner.os != 'Windows'
      name: Install dependencies if Ubuntu
      run: |        
        # Create the venv
        python3 -m venv venv
        # Install dependencies
        venv/bin/python3 -m pip install --upgrade pip
        venv/bin/python3 -m pip install flake8 pytest
        venv/bin/python3 -m pip install -e .
    - if: steps.python_cache.outputs.cache-hit != 'true' && runner.os == 'Windows'
      name: Install dependencies if Windows
      run: |        
        # Create the venv
        python3 -m venv venv
        # Install dependencies
        venv/Scripts/python -m pip install --upgrade pip
        venv/Scripts/python -m pip install flake8 pytest
        venv/Scripts/python -m pip install -e .
    - name: Activate venv on Windows
      if: runner.os == 'Windows'
      run: .\venv\Scripts\activate
    - name: Activate venv on Ubuntu
      if: runner.os != 'Windows'
      run: source venv/bin/activate
    - name: Test with pytest
      run: |
        pytest tests/unit_tests -v